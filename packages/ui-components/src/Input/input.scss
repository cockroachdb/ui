@import "../styles/tokens.scss";
@import "./constants.scss";

// ".container" class is responsible to style up outer borders
// and width, height sizes of input component.
// it can be applied to <input/> element itself or to wrapper <div>
// element in case NumberInput is rendered.
.container {
  border-radius: $input-border-spacing;
  height: exclBorderWidth($input-height);
  display: inline-flex;
  background-color: $color-background-base;
  min-width: exclBorderWidth($input-text-width);
  width: exclBorderWidth($input-text-width);
  padding: $input-border-spacing;

  &.active {
    border: solid $border-width $color-core-neutral-4;
    background-color: $color-background-base;
    color: initial;

    &:hover {
      border: solid $border-width $color-core-neutral-5;
    }

    &:focus-within {
      border: solid $border-width $color-base-blue;
      // Outline params are borrowed from default outline styles for input element
      // and applied to div element.
      outline: $color-base-blue auto 3px;
      outline-offset: -2px;
    }
  }

  &.invalid {
    border: solid $border-width $color-base-red;
    background-color: $color-core-red-1;
    color: $color-base-red;

    &:focus-within, &:hover {
      border: solid $border-width $color-base-red;
    }
  }

  &.disabled {
    background: $color-core-neutral-1;
    color: $color-font-4;
    border: solid $border-width $color-core-neutral-3;
    cursor: default;

    &:focus, &:hover {
      border: solid $border-width $color-core-neutral-3;
    }
  }
}

// ".input" removes most styling from element because it is responsibility of `.container` class.
.input {
  font-family: Source Sans Pro, sans-serif; // TODO (koorosh): replace with token value
  font-size: 14px; // TODO (koorosh): replace with token value (default font size)
  line-height: 22px;
  border: none;
  outline: none;
  padding: 0 crl-gutters(1.5);
  position: relative;
  background-color: inherit;
  color: inherit;
  width: 100%;

  &:focus, &:hover {
    border: none;
    outline: none;
  }
}

// Prefix component styles. Set constant width/height
// and apply colors based on container's state.
.container {
  .prefix {
    width: 14px; // TODO (koorosh): has to be the same as font-size
    min-width: 14px;
    height: 14px;
    min-height: 14px;
    margin: auto 0 auto 8px;
  }

  @each $state, $hoverColor, $focusColor in $state-colors {
    &.#{$state} .prefix > svg {
      fill: $hoverColor;
    }
  }
}
