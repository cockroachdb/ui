@import "~@cockroachlabs/design-tokens/dist/web/tokens";

/**
 Variables
*/
// This variable reflects the base gutter value
// specified by our design system.
$crl-gutters: 8px;
$crl-border-radius: 3px;
$crl-input-height: 40px;
$crl-input-height-small: 24px;
$crl-transition-duration: 0.15s;

/**
 Mixins
*/
@mixin crl-depth($n_: 1, $color_: $color-core-blue-5) {
  /**
      Desc:
        This mixin sets the `box-shadow` property
        to reflect the depth layers outlined in the
        CRL design system.

      Example usage:
        `@include depth(3);`
    */
  $depth-1: 0 1px 5px 0px rgba($color_, 0.17);
  $depth-2: 0 6px 15px 0px rgba($color_, 0.17);
  $depth-3: 0 9px 20px 0px rgba($color_, 0.27);
  $depth-4: 0 10px 40px 0px rgba($color_, 0.37);

  @if $n_ == 1 {
    -webkit-box-shadow: $depth-1;
    -moz-box-shadow: $depth-1;
    box-shadow: $depth-1;
  } @else if $n_ == 2 {
    -webkit-box-shadow: $depth-2;
    -moz-box-shadow: $depth-2;
    box-shadow: $depth-2;
  } @else if $n_ == 3 {
    -webkit-box-shadow: $depth-3;
    -moz-box-shadow: $depth-3;
    box-shadow: $depth-3;
  } @else if $n_ == 4 {
    -webkit-box-shadow: $depth-4;
    -moz-box-shadow: $depth-4;
    box-shadow: $depth-4;
  } @else {
    box-shadow: none;
  }
}

@mixin crl-transition($props_...) {
  /**
    Desc:
      Helper for maintaining consistent transitions.
    Example usage:
      ```
      .my-css-class {
        @include crl-transition(color, border-color, height);
      }
      ```
  */
  transition-property: $props_;
  transition-duration: $crl-transition-duration;
  transition-timing-function: ease-in-out;
}

@mixin crl-box-shadow($offset_h_, $offset_v_, $blur_, $spread_, $color_) {
  /**
    Desc:
      Helper for cross-browser box-shadows.
    Example usage:
      ```
      .my-css-class {
        @include crl-box-shadows(0, 2px, 4px, 0, $crl-blue-5);
      }
      ```
  */
  -webkit-box-shadow: $offset_h_ $offset_v_ $blur_ $spread_ $color_;
  -moz-box-shadow: $offset_h_ $offset_v_ $blur_ $spread_ $color_;
  box-shadow: $offset_h_ $offset_v_ $blur_ $spread_ $color_;
}

@mixin firefox-only {
  @at-root {
    @-moz-document url-prefix() {
      & {
        @content;
      }
    }
  }
}

/**
 Variables
*/
// This variable reflects the base gutter value
// specified by our design system.
$crl-gutters: 8px;

/**
 Functions
*/
@function crl-lighten($color) {
  /**
    Desc:
      Helper for consistent lightening of default tone,
      for example in lightening a button in a disabled state.

    Example usage:
      ```
      .my-css-class {
        background-color: crl-lighten($crl-base-green);
      }
      ```
  */
  @return mix(white, $color, 95%);
}

@function crl-darken($color) {
  /**
    Desc:
      Helper for consistent darkening of default tone,
      for example in darkening a button in a hovered or active state.

    Example usage:
      ```
      .my-css-class {
        background-color: crl-darken($crl-base-green);
      }
      ```
  */
  @return mix(black, $color, 10%);
}

@function crl-gutters($n_: 1) {
  /**
    Desc:
      Use this function when spacing elements to preserve
      consistent spacing in multiples of our gutter value
      established in the CRL design system.

      Only use explict values (e.g. `margin: 5px;`) in CSS
      when setting a one-off value that is used for fine-tuning
      an element position (e.g. such as aligning an SVG icon).

    Example usage:
      ```
      .my-css-class {
        padding-top: crl-gutters(3);
        margin-bottom: crl-gutters(1);
      }
      ```
  */
  @if $n_ {
    @return $n_ * $crl-gutters;
  } @else {
    @return 0;
  }
}
