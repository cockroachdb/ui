// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tooltip renders 1`] = `
<div
  onMouseLeave={[Function]}
  onMouseOver={[Function]}
>
  <div
    id="hoverme"
    key=".0"
  >
    hover me
  </div>
  <div
    className="function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(this && this[arg] || arg);
			} else if (Array.isArray(arg)) {
				classes.push(classNames.apply(this, arg));
			} else if (argType === 'object') {
				if (arg.toString === Object.prototype.toString) {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(this && this[key] || key);
						}
					}
				} else {
					classes.push(arg.toString());
				}
			}
		}

		return classes.join(' ');
	} Tooltip"
    data-jest="tooltip"
    onClick={[Function]}
    onMouseLeave={[Function]}
    style={
      Object {
        "left": "0",
        "position": "absolute",
        "top": "0",
      }
    }
  >
    <div
      className="content"
    >
      <div
        className="arrow"
        style={
          Object {
            "position": "absolute",
          }
        }
      />
      <div
        className="arrowInner"
        style={
          Object {
            "position": "absolute",
          }
        }
      />
      <div
        className="text"
      >
        <div
          id="content"
        >
          test
        </div>
      </div>
    </div>
  </div>
</div>
`;
